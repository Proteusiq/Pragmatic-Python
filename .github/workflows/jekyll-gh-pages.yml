# Workflow for building, testing and deploying a Jekyll site to GitHub Pages
name: Build and Publish

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Run on pull requests to validate changes before merging
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

env:
  RUBY_VERSION: '3.2.2'

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Lint and validate job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          cache-version: 2

      - name: Install dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run markdown linting with auto-fix
        run: |
          # First attempt to auto-fix common issues if possible
          if bundle exec mdl --help | grep -q -- "--auto-correct"; then
            bundle exec mdl . --auto-correct || true
          else
            # Alternative approach using markdownlint-cli2 if installed
            if command -v markdownlint-cli2 &> /dev/null; then
              markdownlint-cli2 --fix "**/*.md" || true
            fi
          fi
          
          # Then run a check - only fail if issues couldn't be auto-fixed
          bundle exec mdl . || echo "::warning::Markdown linting found issues that couldn't be auto-fixed"

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build with Jekyll
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Test build output
        run: |
          if [ ! -f _site/index.html ]; then
            echo "Build failed: index.html not found"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # Only deploy on push to main, not on pull requests
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
